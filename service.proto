syntax = "proto3";
package opengeocoding;
option go_package = "opengeocoding";

service OpenGeocoding {
    rpc Forward(ForwardRequest) returns (ForwardResult) {}
}

service OpenGeocodingInternal {
    rpc RunQuery(RunQueryRequest) returns (RunQueryResponse) {}
    rpc RunBackgroundQuery(RunBackgroundQueryRequest) returns (RunBackgroundQueryResponse) {}
    rpc InsertLocations(InsertLocationsRequest) returns (InsertLocationsResponse) {}
}

message InsertLocationsRequest {
    repeated Location locations = 1;
}

message InsertLocationsResponse {
}

message ForwardRequest {
    string address = 1;
}

message ForwardResult {
    Location location = 1;
    repeated Location otherPotentialLocations = 2;
}

message Location {
    optional string id = 1;
    optional string street = 2;
    optional string number = 3;
    optional string unit = 4;
    optional string city = 5;
    optional string district = 6;
    optional string region = 7;
    optional string postcode = 8;
    float lat = 9;
    float long = 10;
    optional string country_code = 11;
    Source source = 12;
    optional uint32 population = 13;
}

message RunQueryRequest {
    string query = 1;
}

message RunQueryResponse {
    string result = 1;
}

message RunBackgroundQueryRequest {
    string query = 1;
}

message RunBackgroundQueryResponse {
}

enum Source {
    Unknown = 0;
    Geonames = 1;
    OpenAddresses = 2;
    OpenStreetDataAddress = 3;
    OpenStreetDataStreet = 4;
}